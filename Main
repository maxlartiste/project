import sqlite3
import uvicorn
import requests
from fastapi import FastAPI, Request

app = FastAPI()


@app.post("/register_client")
async def register_pey(payload: Request):
    
    values_dict = await payload.json()
    dbase = sqlite3.connect('API_database .db', isolation_level=None)

    queryregisterclient = dbase.execute('''
                    INSERT INTO Clients
                    (Name, Email, Phone , Adress) 
                    VALUES ("{named}", "{email}", "{phone}", "{adress}")             
                    ''' .format(named = values_dict['Name'], email = str(values_dict[ 'Email' ]), phone = str(values_dict[ 'Phone_number' ]),adress = str(values_dict[ 'Adress' ])))
    
    
    dbase.close()
    return "Client created"


@app.post("/register_company")
async def register_pey(payload: Request):
    
    values_dict = await payload.json()

    dbase = sqlite3.connect('API_database .db', isolation_level=None)

    query_company = dbase.execute('''
                    INSERT INTO Companies(Name, VAT, Adress, Bank) 
                    VALUES ("{Name}", "{VAT}","{Adress}", "{Bank}")             
                    '''.format(Name=str(values_dict['Name']), VAT = str(values_dict['VAT']),Adress=str(values_dict['Adress']), Bank= str(values_dict["Bank"])))
    return "Company inserted"
    
app = FastAPI()

@app.post("/ActiveSubscription")
async def Active_subscription(payload: Request):
    values_dict = await payload.json()
 
    Dbase = sqlite3.connect('API_database .db', isolation_level=None)

    Quote_query = Dbase.execute(''' 
            SELECT Quote_id, Accepted FROM Quote
            WHERE Quote_id = {}
            '''.format(str(values_dict['Quote_id'])))

    Accepted = Quote_query.fetchall()[0][1]
   
    if Accepted == 0:
        return 'Quote not accepted'
    else : 
        active_subscription = Dbase.execute ('''
                        UPDATE Subscription
                        SET Active = 1
                        WHERE Client_id = {Client_id}
                        AND Quote_id = {Quote_id}
                        AND VAT_id = {VAT_id}
                        '''.format(Client_id = values_dict['Client_id'], Quote_id = values_dict['Quote_id'], VAT_id = values_dict['VAT_id'])) 

    return "Subscription Active"
    
    
    
  if __name__ == '__main__':
    uvicorn.run(app, host='127.0.0.1', port=8000)
